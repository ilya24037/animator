<?php
// skip-existing-migrations.php

require_once 'vendor/autoload.php';
$app = require_once 'bootstrap/app.php';
$app->make('Illuminate\Contracts\Console\Kernel')->bootstrap();

use Illuminate\Support\Facades\DB;
use Illuminate\Support\Facades\Schema;

echo "üîß –û—Ç–º–µ—á–∞–µ–º —É–∂–µ –ø—Ä–∏–º–µ–Ω–µ–Ω–Ω—ã–µ –º–∏–≥—Ä–∞—Ü–∏–∏ –∫–∞–∫ –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã–µ...\n\n";

// –°–ø–∏—Å–æ–∫ –º–∏–≥—Ä–∞—Ü–∏–π, –∫–æ—Ç–æ—Ä—ã–µ —Ñ–∞–∫—Ç–∏—á–µ—Å–∫–∏ —É–∂–µ –ø—Ä–∏–º–µ–Ω–µ–Ω—ã
$already_applied = [
    '2025_05_16_075410_add_weight_to_animators_table',
    '2025_05_16_080112_add_reviews_to_animators_table',
    '2025_05_16_080553_add_city_to_animators_table',
    '2025_05_16_080845_add_image_to_animators_table',
    '2025_05_16_101642_add_type_to_animators_table',
    '2025_06_01_000000_add_user_id_and_status_to_animators_table',
];

// –ü–æ–ª—É—á–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–π batch
$last_batch = DB::table('migrations')->max('batch') ?? 0;
$new_batch = $last_batch + 1;

foreach ($already_applied as $migration) {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ –∑–∞–ø–∏—Å—å
    $exists = DB::table('migrations')->where('migration', $migration)->exists();
    
    if (!$exists) {
        // –î–æ–±–∞–≤–ª—è–µ–º –∑–∞–ø–∏—Å—å –æ —Ç–æ–º, —á—Ç–æ –º–∏–≥—Ä–∞—Ü–∏—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∞
        DB::table('migrations')->insert([
            'migration' => $migration,
            'batch' => $new_batch
        ]);
        echo "‚úÖ –û—Ç–º–µ—á–µ–Ω–∞ –∫–∞–∫ –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω–∞—è: $migration\n";
    } else {
        echo "‚è≠Ô∏è  –£–∂–µ –≤ —Å–ø–∏—Å–∫–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã—Ö: $migration\n";
    }
}

echo "\n‚ú® –ì–æ—Ç–æ–≤–æ! –¢–µ–ø–µ—Ä—å –∑–∞–ø—É—Å—Ç–∏—Ç–µ 'php artisan migrate' –¥–ª—è –æ—Å—Ç–∞–≤—à–∏—Ö—Å—è –º–∏–≥—Ä–∞—Ü–∏–π.\n";